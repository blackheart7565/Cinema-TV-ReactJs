@use "sass:math";

// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1920;
$containerWidth: 1920;

//Percent
@function percent($px, $from: 100) {
	$result: math.div($px, $from) * 100%;
	@return $result;
}

//REM
@function toRem($px, $current: 16) {
	$result: math.div($px, $current) + rem;
	@return $result;
}

//EM
@function em($px, $current: 16) {
	$result: math.div($px, $current) + em;
	@return $result;
}


// Адаптивное свойство (clamp)
@mixin adaptiveValue($property,
	$startSize,
	$minSize,
	$keepSize: 0,
	$widthFrom: $containerWidth,
	$widthTo: 320) {
	@if ($startSize==0) {
		$startSize: 0.000001;
	}

	@if ($minSize==0) {
		$minSize: 0.000001;
	}

	// Для calc();
	$addSize: math.div($startSize - $minSize, 16);

	@if ($widthFrom ==$containerWidth and $maxWidthContainer ==0) {
		$widthFrom: $maxWidth;
	}

	// Брейк-поинты в EM
	$widthFromMedia: em($widthFrom);
	$widthToMedia: em($widthTo);

	// Формула плавающего значения
	// Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
	$slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
	$yIntersection: -$widthTo * $slope + $minSize;

	@if ($yIntersection==0) {
		$yIntersection: 0.000001;
	}

	$flyValue: #{toRem($yIntersection)}' + '#{$slope * 100}vw;

	// Получение значения свойства
	$propertyValue: #{'clamp(' toRem($minSize) ',' $flyValue ',' toRem($startSize)')'};

	//  Если отрицательные значения
	@if ($minSize > $startSize) {
		$propertyValue: #{'clamp(' toRem($startSize) ',' $flyValue ',' toRem($minSize) ')' 

	}

	;
}

// Устанавливаем значение по умолчанию
@if $keepSize !=1 and $keepSize !=3 {
	@media (min-width: $widthFromMedia) {
		#{$property}: toRem($startSize);
	}
}

// Адаптируем размер в промежутке между указанными ширинами вьюпорта
@media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
	// Если поддерживается clamp();
	@supports (#{$property}: $propertyValue) {
		#{$property}: $propertyValue;
	}

	// Если не поддерживается clamp();
	@supports not (#{$property}: $propertyValue) {
		#{$property}: calc(#{toRem($minSize)} + #{$addSize} * (100vw - #{toRem($widthTo)}) / #{math.div(
 $widthFrom,
			16) - math.div($widthTo, 16)
	});
}
}

@if $keepSize !=1 and $keepSize !=2 {
	@media (max-width: $widthToMedia) {
		#{$property}: toRem($minSize);
	}
}
}